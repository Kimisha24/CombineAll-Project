<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=\, initial-scale=1.0">
    <title>fetch API</title>

    <style>
        table {
            margin-left: auto;
            margin-right: auto;
            text-align: center;
            border-collapse: collapse;
            margin-top: 30px;
            width: 900px;
        }

        td,
        th {
            border: 1px solid black;
            padding: 0.5rem;

        }

        a {
            text-decoration: none;
            color: green;
        }

        .pagination {
            text-align: end;
        }
    </style>


</head>

<body>
    <p>Fetch API :-</p>
    <table>
        <tr>
            <th>user-ID</th>
            <th>ID</th>
            <th>Title</th>
            <th>Body</th>
            <th>details</th>
        </tr>

        <tbody id="data-table">
        </tbody>
    </table>

    <div class="pagination">
        <input type="button" onclick="prevpage()" value="pre" />
        <span id="pageno">1</span>
        <input type="button" onclick="nextpage()" value="next" />
    </div>

    <script>

        async function fetchdata() {

            await fetch('https://jsonplaceholder.typicode.com/posts', {
                method: 'GET',
                headers: {
                    'Content-type': 'application/json; charset=UTF-8',
                }
            }).then((response) => response.json())
                .then((value) => {
                    maximum = value.length;


                    var start = page - 10;
                    var end = page;

                    if (value.length > 0) {

                        var displaydata = '';
                        value.slice(start, end).forEach((e) => {

                            displaydata += `<tr>
                                <td>${e.userId}</td>
                                <td>${e.id}</td>
                                <td>${e.title}</td>
                                <td>${e.body}</td>
                               <td><a href='/fetchapi/${e.id}'>view details</a></td>
                                </tr>`
                        })
                        document.getElementById("data-table").innerHTML = displaydata;
                        console.log(value);

                    }
                });
        }

        fetchdata();

        var page = 10;
        var maximum = 0;

        pageno = document.getElementById('pageno');

        function prevpage() {
            if (page != 10) {
                page -= 10;
                p = page / 10;
                pageno.innerHTML = p;
                fetchdata();

            }
        }

        function nextpage() {
            if (page != maximum) {
                page += 10;
                p = page / 10;
                pageno.innerHTML = p;
                fetchdata();

            }
        }



        // ......................... extra ...................

        // document.addEventListener("DOMContentLoaded", () => {
        //     fetchdata();
        // })


        // let currentpage = 1;
        // let itemperpage = 10;
        // let data = [];

        // async function fetchdata() {

        //     try {
        //         const response = await fetch('https://jsonplaceholder.typicode.com/posts', {
        //             method: 'GET',
        //             headers: {
        //                 'Content-type': 'application/json; charset=UTF-8',
        //             }
        //         })
        //         const jsondata = response.json();
        //         data = jsondata;
        //         displaydata();
        //         console.log(data)

        //     } catch (err) {
        //         console.log(err);
        //     }

        // }

        // function displaydata() {
        //     const table = document.getElementById('data-table');
        //     table.innerHTML = '';


        //     const start = (currentpage - 1) * itemperpage;
        //     const end = start + itemperpage;

        //     for (let i = start; i < end && i < data.length; i++) {
        //         const row = table.insertRow();
        //         const cell1 = row.insertCell(0);
        //         const cell2 = row.insertCell(1);


        //         cell1.textContent = data[i].id;
        //         cell2.textContent = data[i].title;

        //     }

        // }

        // function prevpage() {
        //     if (currentpage > 1) {
        //         currentpage--;
        //         displaydata();
        //     }
        // }

        // function nextpage() {
        //     if (currentpage < Math.ceil(data.length / itemperpage)) {
        //         currentpage++;
        //         displaydata();
        //     }
        // }







    </script>

</body>

</html>